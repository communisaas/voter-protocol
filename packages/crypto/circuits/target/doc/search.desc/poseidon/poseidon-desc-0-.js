searchState.loadedDescShard("poseidon", 0, "Poseidon hashing implementation with variable length input …\n<code>MDSMatrices</code> holds the MDS matrix as well as transition …\n<code>MDSMatrix</code> is applied to <code>State</code> to achive linear layer of …\nPoseidon hasher that maintains state and inputs and yields …\n<code>SparseMDSMatrix</code> are in <code>[row], [hat | identity]</code> form and …\n<code>Spec</code> holds construction parameters as well as constants …\n<code>Spec</code> holds unoptimized construction parameters as well as …\n<code>State</code> is structure <code>T</code> sized field elements that are …\nGet elements of mds matrix\nReturns the first column without first element in the …\nOptimised round constants\nOptimised round constants\nThe capacity value is 2**64 + (o − 1) where o the output …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAssert the form and represent an MDS matrix as a sparse …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns original MDS matrix\nSet of MDS Matrices used in permutation line\nSet of MDS Matrices used in permutation line\nConstructs a clear state poseidon instance\nGiven number of round parameters constructs new Posedion …\nGenerate poseidion parameters\nApplies the Poseidon permutation to the given state\nReturns transition matrix for sparse trick\nNumber of full rounds\nNumber of full rounds\nNumber of partial rounds\nReturns the first row\nReturns rows of the MDS matrix\nReturns sparse matrices for partial rounds\nResults a single element by absorbing already added inputs\nAppends elements to the absorption line updates state …\nCopies elements of the state")