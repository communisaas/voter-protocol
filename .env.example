# VOTER Protocol Environment Variables Template
# COPY THIS FILE TO .env AND FILL IN YOUR VALUES
# NEVER COMMIT .env TO VERSION CONTROL

# ============================================
# SECURITY WARNING
# ============================================
# This file contains EXAMPLE values only.
# Generate your own secure credentials using:
# - Passwords: openssl rand -base64 32
# - Secrets: openssl rand -hex 32
# - API Keys: From respective service dashboards
# ============================================

# N8N Deployment Configuration
N8N_INSTANCE_URL=https://your-n8n-instance.fly.dev
N8N_ADMIN_USER=admin
# Generate secure password: openssl rand -base64 32
N8N_ADMIN_PASSWORD=CHANGE_THIS_GENERATE_SECURE_PASSWORD
# Generate webhook secret: openssl rand -hex 32
N8N_WEBHOOK_SECRET=CHANGE_THIS_GENERATE_SECURE_WEBHOOK_SECRET
FLY_APP_NAME=your-n8n-app-name

# N8N API Key (obtain from N8N settings after deployment)
N8N_API_KEY=CHANGE_THIS_GET_FROM_N8N_SETTINGS

# External API Configuration
COMMUNIQUE_API_URL=https://communique.fly.dev

# Domain Configuration
DOMAIN=communi.email
API_BASE_URL=https://api.communi.email

# Development Override (uncomment for local development)
# DOMAIN=localhost:3000
# API_BASE_URL=http://localhost:3001

# Blockchain Configuration
# For Ronin mainnet
RONIN_RPC_URL=https://api.roninchain.com/rpc
# For Monad testnet (when available)
# MONAD_RPC_URL=https://testnet.monad.xyz

# NEVER commit private keys - use secure key management
# For development only - use hardware wallet or KMS in production
PRIVATE_KEY=0x_YOUR_PRIVATE_KEY_HERE_NEVER_COMMIT
ETHERSCAN_API_KEY=YOUR_ETHERSCAN_API_KEY

# LLM and AI Services
OPENAI_API_KEY=sk-YOUR_OPENAI_API_KEY
GEMINI_API_KEY=YOUR_GEMINI_API_KEY
ANTHROPIC_API_KEY=YOUR_ANTHROPIC_API_KEY

# Congressional APIs
CWC_API_KEY=YOUR_CWC_API_KEY
CWC_API_URL=https://www.house.gov/htbin/formproc

# Identity Verification (Didit.me)
DIDIT_API_URL=https://api.didit.me
DIDIT_API_KEY=YOUR_DIDIT_API_KEY
DIDIT_WEBHOOK_SECRET=GENERATE_SECURE_WEBHOOK_SECRET

# IPFS Configuration
IPFS_GATEWAY=https://ipfs.io
IPFS_API_URL=http://localhost:5001
IPFS_PROJECT_ID=YOUR_INFURA_IPFS_PROJECT_ID
IPFS_PROJECT_SECRET=YOUR_INFURA_IPFS_SECRET

# Security - Generate unique values for each
# JWT: openssl rand -hex 32
JWT_SECRET=CHANGE_THIS_GENERATE_SECURE_JWT_SECRET
# Encryption: openssl rand -hex 32
ENCRYPTION_KEY=CHANGE_THIS_GENERATE_SECURE_ENCRYPTION_KEY

# Database
DATABASE_URL=postgresql://user:password@localhost:5432/voter_protocol
REDIS_URL=redis://localhost:6379

# Communiqu√© Integration
COMMUNIQUE_API_KEY=GENERATE_SHARED_SECRET_KEY
COMMUNIQUE_API_BASE=https://communi.app

# API Server Configuration
API_HOST=0.0.0.0
API_PORT=8000
API_RELOAD=true
LOG_LEVEL=info

# Monitoring and Analytics (Optional)
SENTRY_DSN=https://YOUR_SENTRY_DSN@sentry.io/PROJECT_ID
MIXPANEL_TOKEN=YOUR_MIXPANEL_TOKEN
DATADOG_API_KEY=YOUR_DATADOG_API_KEY

# Feature Flags
ENABLE_CHALLENGE_MARKETS=true
ENABLE_ORACLE_REWARDS=true
ENABLE_N8N_WORKFLOWS=true

# Rate Limiting
RATE_LIMIT_REQUESTS_PER_MINUTE=60
RATE_LIMIT_BURST_SIZE=10

# ============================================
# PRODUCTION CHECKLIST
# ============================================
# [ ] Generate all secure passwords and secrets
# [ ] Never use example values in production
# [ ] Use environment variable injection, not .env files
# [ ] Rotate credentials regularly
# [ ] Monitor for unauthorized access
# [ ] Use secret management service (AWS Secrets Manager, etc)
# ============================================