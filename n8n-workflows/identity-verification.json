{
  "name": "Identity Verification",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "identity/verify",
        "options": {}
      },
      "id": "webhook_trigger",
      "name": "Identity Request",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1.1,
      "position": [250, 400]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $env.COMMUNIQUE_API_URL }}/api/voter/identity",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "userId",
              "value": "={{ $json.userId }}"
            },
            {
              "name": "walletAddress",
              "value": "={{ $json.userAddress }}"
            },
            {
              "name": "zkProof",
              "value": "={{ $json.zkProof }}"
            },
            {
              "name": "publicInputs",
              "value": "={{ $json.publicInputs }}"
            }
          ]
        },
        "options": {
          "timeout": 30000
        }
      },
      "id": "verify_identity_communique",
      "name": "Verify Identity via Communique",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [450, 400]
    },
    {
      "parameters": {
        "jsCode": "// Process Communique identity verification response\nconst response = $json;\n\nif (!response.success) {\n  return {\n    success: false,\n    error: response.error || 'Identity verification failed via Communique',\n    timestamp: new Date().toISOString()\n  };\n}\n\n// Extract verification results from Communique response\nconst verification = response.verification || {};\nconst permissions = response.permissions || {};\n\nreturn {\n  success: true,\n  userId: response.userId,\n  walletAddress: response.walletAddress,\n  verification: {\n    status: verification.status,\n    trust_score: verification.trust_score,\n    congressional_district: verification.congressional_district,\n    district_hash: verification.district_hash,\n    verified_at: verification.verified_at\n  },\n  permissions: {\n    can_submit_templates: permissions.can_submit_templates,\n    can_create_challenges: permissions.can_create_challenges,\n    can_vote_challenges: permissions.can_vote_challenges,\n    daily_action_limit: permissions.daily_action_limit,\n    max_stake: permissions.max_stake\n  },\n  next_steps: [\n    'blockchain_update_reputation',\n    'notify_user'\n  ],\n  message: response.message\n};"
      },
      "id": "process_response",
      "name": "Process Identity Response",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [650, 400]
    },
    {
      "parameters": {
        "conditions": {
          "conditions": [
            {
              "leftValue": "={{ $json.success }}",
              "rightValue": true,
              "operation": "equal"
            }
          ]
        }
      },
      "id": "check_success",
      "name": "Verified?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [850, 400]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $env.N8N_INSTANCE_URL }}/webhook/blockchain/update_reputation",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "operation",
              "value": "update_reputation"
            },
            {
              "name": "userAddress",
              "value": "={{ $json.walletAddress }}"
            },
            {
              "name": "newScore",
              "value": "={{ $json.verification.trust_score }}"
            },
            {
              "name": "reason",
              "value": "Identity verification completed"
            }
          ]
        },
        "options": {
          "timeout": 20000
        }
      },
      "id": "update_reputation",
      "name": "Update Blockchain Reputation",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1050, 300]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "respond",
      "name": "Return Result",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1250, 400]
    }
  ],
  "connections": {
    "webhook_trigger": {
      "main": [
        [
          {
            "node": "verify_identity_communique",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "verify_identity_communique": {
      "main": [
        [
          {
            "node": "process_response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "process_response": {
      "main": [
        [
          {
            "node": "check_success",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "check_success": {
      "main": [
        [
          {
            "node": "update_reputation",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "respond",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "update_reputation": {
      "main": [
        [
          {
            "node": "respond",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  }
}