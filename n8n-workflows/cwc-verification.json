{
  "name": "CWC Verification",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "cwc/verify",
        "options": {}
      },
      "id": "webhook_trigger",
      "name": "CWC Request",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1.1,
      "position": [250, 400]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $env.COMMUNIQUE_API_URL }}/api/voter",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "action",
              "value": "submit_cwc_message"
            },
            {
              "name": "userId",
              "value": "={{ $json.userId }}"
            },
            {
              "name": "templateId",
              "value": "={{ $json.templateId }}"
            },
            {
              "name": "message",
              "value": "={{ $json.messageBody }}"
            },
            {
              "name": "representatives",
              "value": "={{ $json.representatives }}"
            },
            {
              "name": "metadata",
              "value": "={{ { workflow: 'cwc-verification', userAddress: $json.userAddress } }}"
            }
          ]
        },
        "options": {
          "timeout": 30000
        }
      },
      "id": "submit_cwc_communique",
      "name": "Submit via Communique CWC",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [450, 400]
    },
    {
      "parameters": {
        "jsCode": "// Process Communique CWC response\nconst response = $json;\n\nif (!response.success) {\n  return {\n    success: false,\n    error: response.error || 'CWC submission failed via Communique',\n    timestamp: new Date().toISOString()\n  };\n}\n\n// Extract results from Communique response\nconst results = response.results || [];\nconst successfulSubmissions = results.filter(r => r.success);\n\nreturn {\n  success: true,\n  actionId: response.actionId,\n  verification: {\n    civic_action_id: response.actionId,\n    cwc_results: results,\n    representatives_contacted: results.length,\n    successful_submissions: successfulSubmissions.length,\n    verified_at: new Date().toISOString(),\n    status: 'verified'\n  },\n  next_steps: [\n    'blockchain_mint_record',\n    'calculate_reward',\n    'update_reputation'\n  ],\n  message: response.message\n};"
      },
      "id": "process_response",
      "name": "Process CWC Response",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [650, 400]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $env.N8N_INSTANCE_URL }}/webhook/blockchain/mint_record",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "operation",
              "value": "mint_record"
            },
            {
              "name": "userAddress",
              "value": "={{ $json.verification.user_address || $('webhook_trigger').first().json.userAddress }}"
            },
            {
              "name": "actionType",
              "value": "cwc_message"
            },
            {
              "name": "metadata",
              "value": "={{ $json.verification }}"
            }
          ]
        },
        "options": {
          "timeout": 30000
        }
      },
      "id": "trigger_mint",
      "name": "Trigger Blockchain Mint",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [850, 400]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "respond",
      "name": "Return Result",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1250, 400]
    }
  ],
  "connections": {
    "webhook_trigger": {
      "main": [
        [
          {
            "node": "submit_cwc_communique",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "submit_cwc_communique": {
      "main": [
        [
          {
            "node": "process_response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "process_response": {
      "main": [
        [
          {
            "node": "trigger_mint",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "trigger_mint": {
      "main": [
        [
          {
            "node": "respond",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  }
}